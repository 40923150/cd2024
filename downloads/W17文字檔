# NX 1872
# Journal created by user on Fri Jun 14 12:49:44 2024 台北標準時間

#
import math
import NXOpen
import NXOpen.Assemblies
import NXOpen.Assemblies.ProductInterface
import NXOpen.PDM
import NXOpen.Positioning
import NXOpen.Preferences
def main() : 

    theSession  = NXOpen.Session.GetSession()
    # ----------------------------------------------
    #   Menu: File->New...
    # ----------------------------------------------
    markId1 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")
    
    fileNew1 = theSession.Parts.FileNew()
    
    theSession.SetUndoMarkName(markId1, "New Dialog")
    
    markId2 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "New")
    
    theSession.DeleteUndoMark(markId2, None)
    
    markId3 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "New")
    
    fileNew1.TemplateFileName = "assembly-mm-template.prt"
    
    fileNew1.UseBlankTemplate = False
    
    fileNew1.ApplicationName = "AssemblyTemplate"
    
    fileNew1.Units = NXOpen.Part.Units.Millimeters
    
    fileNew1.RelationType = ""
    
    fileNew1.UsesMasterModel = "No"
    
    fileNew1.TemplateType = NXOpen.FileNewTemplateType.Item
    
    fileNew1.TemplatePresentationName = "Assembly"
    
    fileNew1.ItemType = ""
    
    fileNew1.Specialization = ""
    
    fileNew1.SetCanCreateAltrep(False)
    
    fileNew1.NewFileName = "C:\\Users\\user\\Downloads\\assembly1.prt"
    
    fileNew1.MasterFileName = ""
    
    fileNew1.MakeDisplayedPart = True
    
    fileNew1.DisplayPartOption = NXOpen.DisplayPartOption.AllowAdditional
    
    nXObject1 = fileNew1.Commit()
    
    workPart = theSession.Parts.Work
    displayPart = theSession.Parts.Display
    theSession.DeleteUndoMark(markId3, None)
    
    fileNew1.Destroy()
    
    theSession.ApplicationSwitchImmediate("UG_APP_MODELING")
    
    markId4 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")
    
    addComponentBuilder1 = workPart.AssemblyManager.CreateAddComponentBuilder()
    
    componentPositioner1 = workPart.ComponentAssembly.Positioner
    
    componentPositioner1.ClearNetwork()
    
    componentPositioner1.BeginAssemblyConstraints()
    
    allowInterpartPositioning1 = theSession.Preferences.Assemblies.InterpartPositioning
    
    expression1 = workPart.Expressions.CreateSystemExpressionWithUnits("1.0", NXOpen.Unit.Null)
    
    unit1 = workPart.UnitCollection.FindObject("MilliMeter")
    expression2 = workPart.Expressions.CreateSystemExpressionWithUnits("1.0", unit1)
    
    expression3 = workPart.Expressions.CreateSystemExpressionWithUnits("0.0", unit1)
    
    unit2 = workPart.UnitCollection.FindObject("Degrees")
    expression4 = workPart.Expressions.CreateSystemExpressionWithUnits("0.0", unit2)
    
    expression5 = workPart.Expressions.CreateSystemExpressionWithUnits("1", NXOpen.Unit.Null)
    
    expression6 = workPart.Expressions.CreateSystemExpressionWithUnits("1.0", unit1)
    
    expression7 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)
    
    expression8 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit2)
    
    network1 = componentPositioner1.EstablishNetwork()
    
    componentNetwork1 = network1
    componentNetwork1.MoveObjectsState = True
    
    componentNetwork1.DisplayComponent = NXOpen.Assemblies.Component.Null
    
    theSession.SetUndoMarkName(markId4, "Add Component Dialog")
    
    componentNetwork1.MoveObjectsState = True
    
    markId5 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Assembly Constraints Update")
    
    addComponentBuilder1.SetComponentAnchor(NXOpen.Assemblies.ProductInterface.InterfaceObject.Null)
    
    addComponentBuilder1.SetInitialLocationType(NXOpen.Assemblies.AddComponentBuilder.LocationType.Snap)
    
    addComponentBuilder1.SetCount(1)
    
    addComponentBuilder1.SetScatterOption(True)
    
    addComponentBuilder1.ReferenceSet = "Unknown"
    
    addComponentBuilder1.Layer = -1
    
    # ----------------------------------------------
    #   Dialog Begin Add Component
    # ----------------------------------------------
    basePart1, partLoadStatus1 = theSession.Parts.OpenBase("C:\\Users\\user\\Downloads\\first.prt")
    
    partLoadStatus1.Dispose()
    addComponentBuilder1.ReferenceSet = "Use Model"
    
    addComponentBuilder1.Layer = -1
    
    partstouse1 = [NXOpen.BasePart.Null] * 1 
    part1 = basePart1
    partstouse1[0] = part1
    addComponentBuilder1.SetPartsToAdd(partstouse1)
    
    productinterfaceobjects1 = addComponentBuilder1.GetAllProductInterfaceObjects()
    
    arrangement1 = workPart.ComponentAssembly.Arrangements.FindObject("Arrangement 1")
    componentPositioner1.PrimaryArrangement = arrangement1
    
    partstoremove1 = [NXOpen.BasePart.Null] * 1 
    partstoremove1[0] = part1
    addComponentBuilder1.RemovePartsFromSelection(partstoremove1)
    
    partstouse2 = []
    addComponentBuilder1.SetPartsToAdd(partstouse2)
    
    productinterfaceobjects2 = addComponentBuilder1.GetAllProductInterfaceObjects()
    
    markId6 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Start")
    
    expression9 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)
    
    expression10 = workPart.Expressions.CreateSystemExpressionWithUnits("p9_x=0.00000000000", unit1)
    
    expression11 = workPart.Expressions.CreateSystemExpressionWithUnits("p10_y=0.00000000000", unit1)
    
    expression12 = workPart.Expressions.CreateSystemExpressionWithUnits("p11_z=0.00000000000", unit1)
    
    expression13 = workPart.Expressions.CreateSystemExpressionWithUnits("p12_xdelta=0.00000000000", unit1)
    
    expression14 = workPart.Expressions.CreateSystemExpressionWithUnits("p13_ydelta=0.00000000000", unit1)
    
    expression15 = workPart.Expressions.CreateSystemExpressionWithUnits("p14_zdelta=0.00000000000", unit1)
    
    expression16 = workPart.Expressions.CreateSystemExpressionWithUnits("p15_radius=0.00000000000", unit1)
    
    expression17 = workPart.Expressions.CreateSystemExpressionWithUnits("p16_angle=0.00000000000", unit2)
    
    expression18 = workPart.Expressions.CreateSystemExpressionWithUnits("p17_zdelta=0.00000000000", unit1)
    
    expression19 = workPart.Expressions.CreateSystemExpressionWithUnits("p18_radius=0.00000000000", unit1)
    
    expression20 = workPart.Expressions.CreateSystemExpressionWithUnits("p19_angle1=0.00000000000", unit2)
    
    expression21 = workPart.Expressions.CreateSystemExpressionWithUnits("p20_angle2=0.00000000000", unit2)
    
    expression22 = workPart.Expressions.CreateSystemExpressionWithUnits("p21_distance=0", unit1)
    
    expression23 = workPart.Expressions.CreateSystemExpressionWithUnits("p22_arclen=0", unit1)
    
    expression24 = workPart.Expressions.CreateSystemExpressionWithUnits("p23_percent=0", NXOpen.Unit.Null)
    
    expression10.SetFormula("0")
    
    expression11.SetFormula("0")
    
    expression12.SetFormula("0")
    
    expression13.SetFormula("0")
    
    expression14.SetFormula("0")
    
    expression15.SetFormula("0")
    
    expression16.SetFormula("0")
    
    expression17.SetFormula("0")
    
    expression18.SetFormula("0")
    
    expression19.SetFormula("0")
    
    expression20.SetFormula("0")
    
    expression21.SetFormula("0")
    
    expression22.SetFormula("0")
    
    expression24.SetFormula("100")
    
    expression23.SetFormula("0")
    
    theSession.SetUndoMarkName(markId6, "Point Dialog")
    
    expression25 = workPart.Expressions.CreateSystemExpressionWithUnits("p24_x=0.00000000000", unit1)
    
    scalar1 = workPart.Scalars.CreateScalarExpression(expression25, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    expression26 = workPart.Expressions.CreateSystemExpressionWithUnits("p25_y=0.00000000000", unit1)
    
    scalar2 = workPart.Scalars.CreateScalarExpression(expression26, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    expression27 = workPart.Expressions.CreateSystemExpressionWithUnits("p26_z=0.00000000000", unit1)
    
    scalar3 = workPart.Scalars.CreateScalarExpression(expression27, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    point1 = workPart.Points.CreatePoint(scalar1, scalar2, scalar3, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    expression10.SetFormula("0.00000000000")
    
    expression11.SetFormula("0.00000000000")
    
    expression12.SetFormula("0.00000000000")
    
    expression10.SetFormula("0")
    
    expression11.SetFormula("0")
    
    expression12.SetFormula("0")
    
    expression10.SetFormula("0.00000000000")
    
    expression11.SetFormula("0.00000000000")
    
    expression12.SetFormula("0.00000000000")
    
    expression13.SetFormula("0.00000000000")
    
    expression14.SetFormula("0.00000000000")
    
    expression15.SetFormula("0.00000000000")
    
    expression16.SetFormula("0.00000000000")
    
    expression17.SetFormula("0.00000000000")
    
    expression18.SetFormula("0.00000000000")
    
    expression19.SetFormula("0.00000000000")
    
    expression20.SetFormula("0.00000000000")
    
    expression21.SetFormula("0.00000000000")
    
    expression24.SetFormula("100.00000000000")
    
    # ----------------------------------------------
    #   Dialog Begin Point
    # ----------------------------------------------
    markId7 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Point")
    
    theSession.DeleteUndoMark(markId7, None)
    
    markId8 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Point")
    
    expression10.RightHandSide = "0.00000000000"
    
    expression11.RightHandSide = "0.00000000000"
    
    expression12.RightHandSide = "0.00000000000"
    
    workPart.Points.DeletePoint(point1)
    
    expression28 = workPart.Expressions.CreateSystemExpressionWithUnits("p10_x=0.00000000000", unit1)
    
    scalar4 = workPart.Scalars.CreateScalarExpression(expression28, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    expression29 = workPart.Expressions.CreateSystemExpressionWithUnits("p11_y=0.00000000000", unit1)
    
    scalar5 = workPart.Scalars.CreateScalarExpression(expression29, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    expression30 = workPart.Expressions.CreateSystemExpressionWithUnits("p12_z=0.00000000000", unit1)
    
    scalar6 = workPart.Scalars.CreateScalarExpression(expression30, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    point2 = workPart.Points.CreatePoint(scalar4, scalar5, scalar6, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    theSession.DeleteUndoMark(markId8, None)
    
    theSession.SetUndoMarkName(markId6, "Point")
    
    try:
        # Expression is still in use.
        workPart.Expressions.Delete(expression10)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)
        
    try:
        # Expression is still in use.
        workPart.Expressions.Delete(expression11)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)
        
    try:
        # Expression is still in use.
        workPart.Expressions.Delete(expression12)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)
        
    try:
        # Expression is still in use.
        workPart.Expressions.Delete(expression13)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)
        
    try:
        # Expression is still in use.
        workPart.Expressions.Delete(expression14)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)
        
    try:
        # Expression is still in use.
        workPart.Expressions.Delete(expression15)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)
        
    try:
        # Expression is still in use.
        workPart.Expressions.Delete(expression16)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)
        
    try:
        # Expression is still in use.
        workPart.Expressions.Delete(expression17)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)
        
    try:
        # Expression is still in use.
        workPart.Expressions.Delete(expression18)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)
        
    try:
        # Expression is still in use.
        workPart.Expressions.Delete(expression19)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)
        
    try:
        # Expression is still in use.
        workPart.Expressions.Delete(expression20)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)
        
    try:
        # Expression is still in use.
        workPart.Expressions.Delete(expression21)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)
        
    try:
        # Expression is still in use.
        workPart.Expressions.Delete(expression22)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)
        
    try:
        # Expression is still in use.
        workPart.Expressions.Delete(expression23)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)
        
    try:
        # Expression is still in use.
        workPart.Expressions.Delete(expression24)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)
        
    workPart.Expressions.Delete(expression9)
    
    theSession.DeleteUndoMark(markId6, None)
    
    point3 = NXOpen.Point3d(0.0, 0.0, 0.0)
    orientation1 = NXOpen.Matrix3x3()
    
    orientation1.Xx = 1.0
    orientation1.Xy = 0.0
    orientation1.Xz = 0.0
    orientation1.Yx = 0.0
    orientation1.Yy = 1.0
    orientation1.Yz = 0.0
    orientation1.Zx = 0.0
    orientation1.Zy = 0.0
    orientation1.Zz = 1.0
    addComponentBuilder1.SetInitialLocationAndOrientation(point3, orientation1)
    
    addComponentBuilder1.ReferenceSet = "Use Model"
    
    addComponentBuilder1.Layer = -1
    
    partstouse3 = [NXOpen.BasePart.Null] * 1 
    partstouse3[0] = part1
    addComponentBuilder1.SetPartsToAdd(partstouse3)
    
    productinterfaceobjects3 = addComponentBuilder1.GetAllProductInterfaceObjects()
    
    arrangement2 = workPart.ComponentAssembly.Arrangements.FindObject("Arrangement 1")
    componentPositioner1.PrimaryArrangement = arrangement2
    
    movableObjects1 = [NXOpen.NXObject.Null] * 1 
    component1 = workPart.ComponentAssembly.RootComponent.FindObject("COMPONENT first 1")
    movableObjects1[0] = component1
    componentNetwork1.SetMovingGroup(movableObjects1)
    
    markId9 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Add Component")
    
    markId10 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "AddComponent on_apply")
    
    componentNetwork1.Solve()
    
    componentPositioner1.ClearNetwork()
    
    nErrs1 = theSession.UpdateManager.AddToDeleteList(componentNetwork1)
    
    nErrs2 = theSession.UpdateManager.DoUpdate(markId5)
    
    componentPositioner1.EndAssemblyConstraints()
    
    logicalobjects1 = addComponentBuilder1.GetLogicalObjectsHavingUnassignedRequiredAttributes()
    
    addComponentBuilder1.ComponentName = "FIRST"
    
    nXObject2 = addComponentBuilder1.Commit()
    
    errorList1 = addComponentBuilder1.GetOperationFailures()
    
    errorList1.Dispose()
    markId11 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "ComponentOperationUtilities CreateFixConstraint")
    
    componentPositioner2 = workPart.ComponentAssembly.Positioner
    
    componentPositioner2.ClearNetwork()
    
    network2 = componentPositioner2.EstablishNetwork()
    
    componentNetwork2 = network2
    componentNetwork2.MoveObjectsState = True
    
    componentNetwork2.DisplayComponent = NXOpen.Assemblies.Component.Null
    
    componentNetwork2.NetworkArrangementsMode = NXOpen.Positioning.ComponentNetwork.ArrangementsMode.Existing
    
    constraint1 = componentPositioner2.CreateConstraint(True)
    
    componentConstraint1 = constraint1
    componentConstraint1.ConstraintType = NXOpen.Positioning.Constraint.Type.Fix
    
    component2 = nXObject2
    constraintReference1 = componentConstraint1.CreateConstraintReference(component2, component2, False, False, False)
    
    componentNetwork2.Solve()
    
    componentPositioner2.ClearNetwork()
    
    nErrs3 = theSession.UpdateManager.AddToDeleteList(componentNetwork2)
    
    nErrs4 = theSession.UpdateManager.DoUpdate(markId4)
    
    theSession.DeleteUndoMark(markId9, None)
    
    theSession.SetUndoMarkName(markId4, "Add Component")
    
    addComponentBuilder1.Destroy()
    
    workPart.Points.DeletePoint(point2)
    
    componentPositioner2.PrimaryArrangement = NXOpen.Assemblies.Arrangement.Null
    
    theSession.DeleteUndoMark(markId5, None)
    
    markId12 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")
    
    addComponentBuilder2 = workPart.AssemblyManager.CreateAddComponentBuilder()
    
    componentPositioner3 = workPart.ComponentAssembly.Positioner
    
    componentPositioner3.ClearNetwork()
    
    componentPositioner3.PrimaryArrangement = arrangement2
    
    componentPositioner3.BeginAssemblyConstraints()
    
    allowInterpartPositioning2 = theSession.Preferences.Assemblies.InterpartPositioning
    
    expression31 = workPart.Expressions.CreateSystemExpressionWithUnits("1.0", NXOpen.Unit.Null)
    
    expression32 = workPart.Expressions.CreateSystemExpressionWithUnits("1.0", unit1)
    
    expression33 = workPart.Expressions.CreateSystemExpressionWithUnits("0.0", unit1)
    
    expression34 = workPart.Expressions.CreateSystemExpressionWithUnits("0.0", unit2)
    
    expression35 = workPart.Expressions.CreateSystemExpressionWithUnits("1", NXOpen.Unit.Null)
    
    expression36 = workPart.Expressions.CreateSystemExpressionWithUnits("1.0", unit1)
    
    expression37 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)
    
    expression38 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit2)
    
    network3 = componentPositioner3.EstablishNetwork()
    
    componentNetwork3 = network3
    componentNetwork3.MoveObjectsState = True
    
    componentNetwork3.DisplayComponent = NXOpen.Assemblies.Component.Null
    
    theSession.SetUndoMarkName(markId12, "Add Component Dialog")
    
    componentNetwork3.MoveObjectsState = True
    
    markId13 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Assembly Constraints Update")
    
    addComponentBuilder2.SetComponentAnchor(NXOpen.Assemblies.ProductInterface.InterfaceObject.Null)
    
    addComponentBuilder2.SetInitialLocationType(NXOpen.Assemblies.AddComponentBuilder.LocationType.Snap)
    
    addComponentBuilder2.SetCount(1)
    
    addComponentBuilder2.SetScatterOption(True)
    
    addComponentBuilder2.ReferenceSet = "Unknown"
    
    addComponentBuilder2.Layer = -1
    
    # ----------------------------------------------
    #   Dialog Begin Add Component
    # ----------------------------------------------
    scaleAboutPoint1 = NXOpen.Point3d(-0.16012970937746104, -3.2025941875491148, 0.0)
    viewCenter1 = NXOpen.Point3d(0.16012970937746104, 3.2025941875491148, 0.0)
    workPart.ModelingViews.WorkView.ZoomAboutPoint(0.80000000000000004, scaleAboutPoint1, viewCenter1)
    
    scaleAboutPoint2 = NXOpen.Point3d(-3.8030805977145348, -0.40032427344365262, 0.0)
    viewCenter2 = NXOpen.Point3d(3.8030805977146009, 0.40032427344365262, 0.0)
    workPart.ModelingViews.WorkView.ZoomAboutPoint(0.80000000000000004, scaleAboutPoint2, viewCenter2)
    
    scaleAboutPoint3 = NXOpen.Point3d(-7.255877456165913, -3.0024320508273115, 0.0)
    viewCenter3 = NXOpen.Point3d(7.2558774561659956, 3.0024320508273115, 0.0)
    workPart.ModelingViews.WorkView.ZoomAboutPoint(0.80000000000000004, scaleAboutPoint3, viewCenter3)
    
    scaleAboutPoint4 = NXOpen.Point3d(-9.6953534974631008, -4.3785467407897958, 0.0)
    viewCenter4 = NXOpen.Point3d(9.6953534974632039, 4.3785467407897958, 0.0)
    workPart.ModelingViews.WorkView.ZoomAboutPoint(0.80000000000000004, scaleAboutPoint4, viewCenter4)
    
    scaleAboutPoint5 = NXOpen.Point3d(-12.119191871828811, -5.4731834259872443, 0.0)
    viewCenter5 = NXOpen.Point3d(12.119191871829068, 5.4731834259872443, 0.0)
    workPart.ModelingViews.WorkView.ZoomAboutPoint(0.80000000000000004, scaleAboutPoint5, viewCenter5)
    
    scaleAboutPoint6 = NXOpen.Point3d(-19.058406572634098, -4.8867709160600503, 0.0)
    viewCenter6 = NXOpen.Point3d(19.058406572634262, 4.8867709160600503, 0.0)
    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint6, viewCenter6)
    
    scaleAboutPoint7 = NXOpen.Point3d(-15.246725258107213, -3.9094167328480398, 0.0)
    viewCenter7 = NXOpen.Point3d(15.246725258107471, 3.9094167328480398, 0.0)
    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint7, viewCenter7)
    
    scaleAboutPoint8 = NXOpen.Point3d(-12.197380206485773, -3.1275333862784844, 0.0)
    viewCenter8 = NXOpen.Point3d(12.197380206485876, 3.1275333862784325, 0.0)
    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint8, viewCenter8)
    
    scaleAboutPoint9 = NXOpen.Point3d(-9.7579041651886183, -2.5020267090227457, 0.0)
    viewCenter9 = NXOpen.Point3d(9.7579041651887, 2.5020267090227044, 0.0)
    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint9, viewCenter9)
    
    scaleAboutPoint10 = NXOpen.Point3d(-7.8063233321508942, -0.4003242734436856, 0.0)
    viewCenter10 = NXOpen.Point3d(7.8063233321510266, 0.40032427344361954, 0.0)
    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint10, viewCenter10)
    
    scaleAboutPoint11 = NXOpen.Point3d(-4.6437615719461318, -2.6435839944247325e-14, 0.0)
    viewCenter11 = NXOpen.Point3d(4.6437615719462642, -2.6435839944247325e-14, 0.0)
    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint11, viewCenter11)
    
    scaleAboutPoint12 = NXOpen.Point3d(-3.7150092575569262, -2.1148671955397857e-14, 0.0)
    viewCenter12 = NXOpen.Point3d(3.7150092575570532, -2.1148671955397857e-14, 0.0)
    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint12, viewCenter12)
    
    scaleAboutPoint13 = NXOpen.Point3d(-2.9720074060455239, -3.3837875128636571e-14, 0.0)
    viewCenter13 = NXOpen.Point3d(2.9720074060456256, -3.3837875128636571e-14, 0.0)
    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint13, viewCenter13)
    
    scaleAboutPoint14 = NXOpen.Point3d(-2.3776059248364056, -2.7070300102909257e-14, 0.0)
    viewCenter14 = NXOpen.Point3d(2.3776059248364869, -2.7070300102909257e-14, 0.0)
    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint14, viewCenter14)
    
    scaleAboutPoint15 = NXOpen.Point3d(0.065589128961051332, -0.78706954753209624, 0.0)
    viewCenter15 = NXOpen.Point3d(-0.065589128960953882, 0.78706954753204217, 0.0)
    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint15, viewCenter15)
    
    scaleAboutPoint16 = NXOpen.Point3d(0.05247130316884107, -0.62965563802569435, 0.0)
    viewCenter16 = NXOpen.Point3d(-0.052471303168754445, 0.62965563802563373, 0.0)
    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint16, viewCenter16)
    
    scaleAboutPoint17 = NXOpen.Point3d(0.041977042535079799, -0.50372451042055566, 0.0)
    viewCenter17 = NXOpen.Point3d(-0.0419770425350105, 0.50372451042050015, 0.0)
    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint17, viewCenter17)
    
    scaleAboutPoint18 = NXOpen.Point3d(0.033581634028063835, -0.40297960833645552, 0.0)
    viewCenter18 = NXOpen.Point3d(-0.033581634027997305, 0.40297960833638902, 0.0)
    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint18, viewCenter18)
    
    basePart2, partLoadStatus2 = theSession.Parts.OpenBase("C:\\Users\\user\\Downloads\\wheels.prt")
    
    partLoadStatus2.Dispose()
    addComponentBuilder2.ReferenceSet = "Use Model"
    
    addComponentBuilder2.Layer = -1
    
    partstouse4 = [NXOpen.BasePart.Null] * 1 
    part2 = basePart2
    partstouse4[0] = part2
    addComponentBuilder2.SetPartsToAdd(partstouse4)
    
    productinterfaceobjects4 = addComponentBuilder2.GetAllProductInterfaceObjects()
    
    partstoremove2 = [NXOpen.BasePart.Null] * 1 
    partstoremove2[0] = part2
    addComponentBuilder2.RemovePartsFromSelection(partstoremove2)
    
    partstouse5 = []
    addComponentBuilder2.SetPartsToAdd(partstouse5)
    
    productinterfaceobjects5 = addComponentBuilder2.GetAllProductInterfaceObjects()
    
    addComponentBuilder2.ReferenceSet = "Use Model"
    
    addComponentBuilder2.Layer = -1
    
    partstouse6 = [NXOpen.BasePart.Null] * 1 
    partstouse6[0] = part2
    addComponentBuilder2.SetPartsToAdd(partstouse6)
    
    productinterfaceobjects6 = addComponentBuilder2.GetAllProductInterfaceObjects()
    
    partstoremove3 = [NXOpen.BasePart.Null] * 1 
    partstoremove3[0] = part2
    addComponentBuilder2.RemovePartsFromSelection(partstoremove3)
    
    partstouse7 = []
    addComponentBuilder2.SetPartsToAdd(partstouse7)
    
    productinterfaceobjects7 = addComponentBuilder2.GetAllProductInterfaceObjects()
    
    markId14 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Start")
    
    expression39 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)
    
    expression40 = workPart.Expressions.CreateSystemExpressionWithUnits("p9_x=0.00000000000", unit1)
    
    expression41 = workPart.Expressions.CreateSystemExpressionWithUnits("p10_y=0.00000000000", unit1)
    
    expression42 = workPart.Expressions.CreateSystemExpressionWithUnits("p11_z=0.00000000000", unit1)
    
    expression43 = workPart.Expressions.CreateSystemExpressionWithUnits("p12_xdelta=0.00000000000", unit1)
    
    expression44 = workPart.Expressions.CreateSystemExpressionWithUnits("p13_ydelta=0.00000000000", unit1)
    
    expression45 = workPart.Expressions.CreateSystemExpressionWithUnits("p14_zdelta=0.00000000000", unit1)
    
    expression46 = workPart.Expressions.CreateSystemExpressionWithUnits("p15_radius=0.00000000000", unit1)
    
    expression47 = workPart.Expressions.CreateSystemExpressionWithUnits("p16_angle=0.00000000000", unit2)
    
    expression48 = workPart.Expressions.CreateSystemExpressionWithUnits("p17_zdelta=0.00000000000", unit1)
    
    expression49 = workPart.Expressions.CreateSystemExpressionWithUnits("p18_radius=0.00000000000", unit1)
    
    expression50 = workPart.Expressions.CreateSystemExpressionWithUnits("p19_angle1=0.00000000000", unit2)
    
    expression51 = workPart.Expressions.CreateSystemExpressionWithUnits("p20_angle2=0.00000000000", unit2)
    
    expression52 = workPart.Expressions.CreateSystemExpressionWithUnits("p21_distance=0", unit1)
    
    expression53 = workPart.Expressions.CreateSystemExpressionWithUnits("p22_arclen=0", unit1)
    
    expression54 = workPart.Expressions.CreateSystemExpressionWithUnits("p23_percent=0", NXOpen.Unit.Null)
    
    expression40.SetFormula("0")
    
    expression41.SetFormula("0")
    
    expression42.SetFormula("0")
    
    expression43.SetFormula("0")
    
    expression44.SetFormula("0")
    
    expression45.SetFormula("0")
    
    expression46.SetFormula("0")
    
    expression47.SetFormula("0")
    
    expression48.SetFormula("0")
    
    expression49.SetFormula("0")
    
    expression50.SetFormula("0")
    
    expression51.SetFormula("0")
    
    expression52.SetFormula("0")
    
    expression54.SetFormula("100")
    
    expression53.SetFormula("0")
    
    theSession.SetUndoMarkName(markId14, "Point Dialog")
    
    expression55 = workPart.Expressions.CreateSystemExpressionWithUnits("p24_x=0.00000000000", unit1)
    
    scalar7 = workPart.Scalars.CreateScalarExpression(expression55, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    expression56 = workPart.Expressions.CreateSystemExpressionWithUnits("p25_y=0.00000000000", unit1)
    
    scalar8 = workPart.Scalars.CreateScalarExpression(expression56, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    expression57 = workPart.Expressions.CreateSystemExpressionWithUnits("p26_z=0.00000000000", unit1)
    
    scalar9 = workPart.Scalars.CreateScalarExpression(expression57, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    point4 = workPart.Points.CreatePoint(scalar7, scalar8, scalar9, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    expression40.SetFormula("0.00000000000")
    
    expression41.SetFormula("0.00000000000")
    
    expression42.SetFormula("0.00000000000")
    
    expression40.SetFormula("0")
    
    expression41.SetFormula("0")
    
    expression42.SetFormula("0")
    
    expression40.SetFormula("0.00000000000")
    
    expression41.SetFormula("0.00000000000")
    
    expression42.SetFormula("0.00000000000")
    
    expression43.SetFormula("0.00000000000")
    
    expression44.SetFormula("0.00000000000")
    
    expression45.SetFormula("0.00000000000")
    
    expression46.SetFormula("0.00000000000")
    
    expression47.SetFormula("0.00000000000")
    
    expression48.SetFormula("0.00000000000")
    
    expression49.SetFormula("0.00000000000")
    
    expression50.SetFormula("0.00000000000")
    
    expression51.SetFormula("0.00000000000")
    
    expression54.SetFormula("100.00000000000")
    
    # ----------------------------------------------
    #   Dialog Begin Point
    # ----------------------------------------------
    coordinates1 = NXOpen.Point3d(-5.9125814789597921, -28.411325968637296, 0.0)
    point5 = workPart.Points.CreatePoint(coordinates1)
    
    nErrs5 = theSession.UpdateManager.AddToDeleteList(point5)
    
    workPart.Points.DeletePoint(point4)
    
    expression58 = workPart.Expressions.CreateSystemExpressionWithUnits("p10_x=-5.91258147895979", unit1)
    
    scalar10 = workPart.Scalars.CreateScalarExpression(expression58, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    expression59 = workPart.Expressions.CreateSystemExpressionWithUnits("p11_y=-28.4113259686373", unit1)
    
    scalar11 = workPart.Scalars.CreateScalarExpression(expression59, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    expression60 = workPart.Expressions.CreateSystemExpressionWithUnits("p12_z=0", unit1)
    
    scalar12 = workPart.Scalars.CreateScalarExpression(expression60, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    point6 = workPart.Points.CreatePoint(scalar10, scalar11, scalar12, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    point6.RemoveViewDependency()
    
    expression40.SetFormula("-5.91258147895979")
    
    expression41.SetFormula("-28.4113259686373")
    
    expression42.SetFormula("0")
    
    expression40.SetFormula("-5.91258147896")
    
    expression41.SetFormula("-28.41132596864")
    
    expression42.SetFormula("0.00000000000")
    
    try:
        # Expression is still in use.
        workPart.Expressions.Delete(expression40)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)
        
    try:
        # Expression is still in use.
        workPart.Expressions.Delete(expression41)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)
        
    try:
        # Expression is still in use.
        workPart.Expressions.Delete(expression42)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)
        
    try:
        # Expression is still in use.
        workPart.Expressions.Delete(expression43)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)
        
    try:
        # Expression is still in use.
        workPart.Expressions.Delete(expression44)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)
        
    try:
        # Expression is still in use.
        workPart.Expressions.Delete(expression45)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)
        
    try:
        # Expression is still in use.
        workPart.Expressions.Delete(expression46)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)
        
    try:
        # Expression is still in use.
        workPart.Expressions.Delete(expression47)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)
        
    try:
        # Expression is still in use.
        workPart.Expressions.Delete(expression48)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)
        
    try:
        # Expression is still in use.
        workPart.Expressions.Delete(expression49)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)
        
    try:
        # Expression is still in use.
        workPart.Expressions.Delete(expression50)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)
        
    try:
        # Expression is still in use.
        workPart.Expressions.Delete(expression51)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)
        
    try:
        # Expression is still in use.
        workPart.Expressions.Delete(expression52)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)
        
    try:
        # Expression is still in use.
        workPart.Expressions.Delete(expression53)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)
        
    try:
        # Expression is still in use.
        workPart.Expressions.Delete(expression54)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)
        
    workPart.Expressions.Delete(expression39)
    
    theSession.UndoToMark(markId14, None)
    
    theSession.DeleteUndoMark(markId14, None)
    
    theSession.DeleteUndoMark(markId14, None)
    
    addComponentBuilder2.ReferenceSet = "Use Model"
    
    addComponentBuilder2.Layer = -1
    
    partstouse8 = [NXOpen.BasePart.Null] * 1 
    partstouse8[0] = part2
    addComponentBuilder2.SetPartsToAdd(partstouse8)
    
    productinterfaceobjects8 = addComponentBuilder2.GetAllProductInterfaceObjects()
    
    coordinates2 = NXOpen.Point3d(-23.651874671427372, -15.290596362525065, -4.4408920985006262e-16)
    point7 = workPart.Points.CreatePoint(coordinates2)
    
    coordinates3 = NXOpen.Point3d(-23.651874671427372, -15.290596362525065, -4.4408920985006262e-16)
    point8 = workPart.Points.CreatePoint(coordinates3)
    
    origin1 = NXOpen.Point3d(-23.651874671427372, -15.290596362525065, -4.4408920985006262e-16)
    vector1 = NXOpen.Vector3d(0.0, 0.0, 1.0)
    direction1 = workPart.Directions.CreateDirection(origin1, vector1, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    origin2 = NXOpen.Point3d(-23.651874671427372, -15.290596362525065, -4.4408920985006262e-16)
    vector2 = NXOpen.Vector3d(1.0, 0.0, 0.0)
    direction2 = workPart.Directions.CreateDirection(origin2, vector2, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    origin3 = NXOpen.Point3d(-23.651874671427372, -15.290596362525065, -4.4408920985006262e-16)
    matrix1 = NXOpen.Matrix3x3()
    
    matrix1.Xx = 1.0
    matrix1.Xy = 0.0
    matrix1.Xz = 0.0
    matrix1.Yx = 0.0
    matrix1.Yy = 1.0
    matrix1.Yz = 0.0
    matrix1.Zx = 0.0
    matrix1.Zy = 0.0
    matrix1.Zz = 1.0
    plane1 = workPart.Planes.CreateFixedTypePlane(origin3, matrix1, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    xform1 = workPart.Xforms.CreateXformByPlaneXDirPoint(plane1, direction2, point8, NXOpen.SmartObject.UpdateOption.WithinModeling, 0.625, False, False)
    
    cartesianCoordinateSystem1 = workPart.CoordinateSystems.CreateCoordinateSystem(xform1, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    point9 = NXOpen.Point3d(-23.651874671427372, -15.290596362525065, -4.4408920985006262e-16)
    orientation2 = NXOpen.Matrix3x3()
    
    orientation2.Xx = 1.0
    orientation2.Xy = 0.0
    orientation2.Xz = 0.0
    orientation2.Yx = 0.0
    orientation2.Yy = 1.0
    orientation2.Yz = 0.0
    orientation2.Zx = 0.0
    orientation2.Zy = 0.0
    orientation2.Zz = 1.0
    addComponentBuilder2.SetInitialLocationAndOrientation(point9, orientation2)
    
    movableObjects2 = [NXOpen.NXObject.Null] * 1 
    component3 = workPart.ComponentAssembly.RootComponent.FindObject("COMPONENT wheels 1")
    movableObjects2[0] = component3
    componentNetwork3.SetMovingGroup(movableObjects2)
    
    markId15 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Add Component")
    
    markId16 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "AddComponent on_apply")
    
    componentNetwork3.Solve()
    
    componentPositioner3.ClearNetwork()
    
    nErrs6 = theSession.UpdateManager.AddToDeleteList(componentNetwork3)
    
    nErrs7 = theSession.UpdateManager.DoUpdate(markId13)
    
    componentPositioner3.EndAssemblyConstraints()
    
    logicalobjects2 = addComponentBuilder2.GetLogicalObjectsHavingUnassignedRequiredAttributes()
    
    addComponentBuilder2.ComponentName = "WHEELS"
    
    nXObject3 = addComponentBuilder2.Commit()
    
    errorList2 = addComponentBuilder2.GetOperationFailures()
    
    errorList2.Dispose()
    theSession.DeleteUndoMark(markId15, None)
    
    theSession.SetUndoMarkName(markId12, "Add Component")
    
    addComponentBuilder2.Destroy()
    
    workPart.Points.DeletePoint(point7)
    
    componentPositioner3.PrimaryArrangement = NXOpen.Assemblies.Arrangement.Null
    
    theSession.DeleteUndoMark(markId13, None)
    
    markId17 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")
    
    addComponentBuilder3 = workPart.AssemblyManager.CreateAddComponentBuilder()
    
    componentPositioner4 = workPart.ComponentAssembly.Positioner
    
    componentPositioner4.ClearNetwork()
    
    componentPositioner4.PrimaryArrangement = arrangement2
    
    componentPositioner4.BeginAssemblyConstraints()
    
    allowInterpartPositioning3 = theSession.Preferences.Assemblies.InterpartPositioning
    
    expression61 = workPart.Expressions.CreateSystemExpressionWithUnits("1.0", NXOpen.Unit.Null)
    
    expression62 = workPart.Expressions.CreateSystemExpressionWithUnits("1.0", unit1)
    
    expression63 = workPart.Expressions.CreateSystemExpressionWithUnits("0.0", unit1)
    
    expression64 = workPart.Expressions.CreateSystemExpressionWithUnits("0.0", unit2)
    
    expression65 = workPart.Expressions.CreateSystemExpressionWithUnits("1", NXOpen.Unit.Null)
    
    expression66 = workPart.Expressions.CreateSystemExpressionWithUnits("1.0", unit1)
    
    expression67 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)
    
    expression68 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit2)
    
    network4 = componentPositioner4.EstablishNetwork()
    
    componentNetwork4 = network4
    componentNetwork4.MoveObjectsState = True
    
    componentNetwork4.DisplayComponent = NXOpen.Assemblies.Component.Null
    
    theSession.SetUndoMarkName(markId17, "Add Component Dialog")
    
    componentNetwork4.MoveObjectsState = True
    
    markId18 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Assembly Constraints Update")
    
    addComponentBuilder3.SetComponentAnchor(NXOpen.Assemblies.ProductInterface.InterfaceObject.Null)
    
    addComponentBuilder3.SetInitialLocationType(NXOpen.Assemblies.AddComponentBuilder.LocationType.Snap)
    
    addComponentBuilder3.SetCount(1)
    
    addComponentBuilder3.SetScatterOption(True)
    
    addComponentBuilder3.ReferenceSet = "Unknown"
    
    addComponentBuilder3.Layer = -1
    
    # ----------------------------------------------
    #   Dialog Begin Add Component
    # ----------------------------------------------
    addComponentBuilder3.ReferenceSet = "Use Model"
    
    addComponentBuilder3.Layer = -1
    
    partstouse9 = [NXOpen.BasePart.Null] * 1 
    partstouse9[0] = part2
    addComponentBuilder3.SetPartsToAdd(partstouse9)
    
    productinterfaceobjects9 = addComponentBuilder3.GetAllProductInterfaceObjects()
    
    coordinates4 = NXOpen.Point3d(-35.353584993144899, -9.715980721435308, -8.8817841970012523e-16)
    point10 = workPart.Points.CreatePoint(coordinates4)
    
    coordinates5 = NXOpen.Point3d(-35.353584993144899, -9.715980721435308, -8.8817841970012523e-16)
    point11 = workPart.Points.CreatePoint(coordinates5)
    
    origin4 = NXOpen.Point3d(-35.353584993144899, -9.715980721435308, -8.8817841970012523e-16)
    vector3 = NXOpen.Vector3d(0.0, 0.0, 1.0)
    direction3 = workPart.Directions.CreateDirection(origin4, vector3, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    origin5 = NXOpen.Point3d(-35.353584993144899, -9.715980721435308, -8.8817841970012523e-16)
    vector4 = NXOpen.Vector3d(1.0, 0.0, 0.0)
    direction4 = workPart.Directions.CreateDirection(origin5, vector4, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    origin6 = NXOpen.Point3d(-35.353584993144899, -9.715980721435308, -8.8817841970012523e-16)
    matrix2 = NXOpen.Matrix3x3()
    
    matrix2.Xx = 1.0
    matrix2.Xy = 0.0
    matrix2.Xz = 0.0
    matrix2.Yx = 0.0
    matrix2.Yy = 1.0
    matrix2.Yz = 0.0
    matrix2.Zx = 0.0
    matrix2.Zy = 0.0
    matrix2.Zz = 1.0
    plane2 = workPart.Planes.CreateFixedTypePlane(origin6, matrix2, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    xform2 = workPart.Xforms.CreateXformByPlaneXDirPoint(plane2, direction4, point11, NXOpen.SmartObject.UpdateOption.WithinModeling, 0.625, False, False)
    
    cartesianCoordinateSystem2 = workPart.CoordinateSystems.CreateCoordinateSystem(xform2, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    point12 = NXOpen.Point3d(-35.353584993144899, -9.715980721435308, -8.8817841970012523e-16)
    orientation3 = NXOpen.Matrix3x3()
    
    orientation3.Xx = 1.0
    orientation3.Xy = 0.0
    orientation3.Xz = 0.0
    orientation3.Yx = 0.0
    orientation3.Yy = 1.0
    orientation3.Yz = 0.0
    orientation3.Zx = 0.0
    orientation3.Zy = 0.0
    orientation3.Zz = 1.0
    addComponentBuilder3.SetInitialLocationAndOrientation(point12, orientation3)
    
    movableObjects3 = [NXOpen.NXObject.Null] * 1 
    component4 = workPart.ComponentAssembly.RootComponent.FindObject("COMPONENT wheels 1")
    movableObjects3[0] = component4
    componentNetwork4.SetMovingGroup(movableObjects3)
    
    markId19 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Add Component")
    
    markId20 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "AddComponent on_apply")
    
    componentNetwork4.Solve()
    
    componentPositioner4.ClearNetwork()
    
    nErrs8 = theSession.UpdateManager.AddToDeleteList(componentNetwork4)
    
    nErrs9 = theSession.UpdateManager.DoUpdate(markId18)
    
    componentPositioner4.EndAssemblyConstraints()
    
    logicalobjects3 = addComponentBuilder3.GetLogicalObjectsHavingUnassignedRequiredAttributes()
    
    addComponentBuilder3.ComponentName = "WHEELS"
    
    nXObject4 = addComponentBuilder3.Commit()
    
    errorList3 = addComponentBuilder3.GetOperationFailures()
    
    errorList3.Dispose()
    theSession.DeleteUndoMark(markId19, None)
    
    theSession.SetUndoMarkName(markId17, "Add Component")
    
    addComponentBuilder3.Destroy()
    
    workPart.Points.DeletePoint(point10)
    
    componentPositioner4.PrimaryArrangement = NXOpen.Assemblies.Arrangement.Null
    
    theSession.DeleteUndoMark(markId18, None)
    
    markId21 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")
    
    addComponentBuilder4 = workPart.AssemblyManager.CreateAddComponentBuilder()
    
    componentPositioner5 = workPart.ComponentAssembly.Positioner
    
    componentPositioner5.ClearNetwork()
    
    componentPositioner5.PrimaryArrangement = arrangement2
    
    componentPositioner5.BeginAssemblyConstraints()
    
    allowInterpartPositioning4 = theSession.Preferences.Assemblies.InterpartPositioning
    
    expression69 = workPart.Expressions.CreateSystemExpressionWithUnits("1.0", NXOpen.Unit.Null)
    
    expression70 = workPart.Expressions.CreateSystemExpressionWithUnits("1.0", unit1)
    
    expression71 = workPart.Expressions.CreateSystemExpressionWithUnits("0.0", unit1)
    
    expression72 = workPart.Expressions.CreateSystemExpressionWithUnits("0.0", unit2)
    
    expression73 = workPart.Expressions.CreateSystemExpressionWithUnits("1", NXOpen.Unit.Null)
    
    expression74 = workPart.Expressions.CreateSystemExpressionWithUnits("1.0", unit1)
    
    expression75 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)
    
    expression76 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit2)
    
    network5 = componentPositioner5.EstablishNetwork()
    
    componentNetwork5 = network5
    componentNetwork5.MoveObjectsState = True
    
    componentNetwork5.DisplayComponent = NXOpen.Assemblies.Component.Null
    
    theSession.SetUndoMarkName(markId21, "Add Component Dialog")
    
    componentNetwork5.MoveObjectsState = True
    
    markId22 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Assembly Constraints Update")
    
    addComponentBuilder4.SetComponentAnchor(NXOpen.Assemblies.ProductInterface.InterfaceObject.Null)
    
    addComponentBuilder4.SetInitialLocationType(NXOpen.Assemblies.AddComponentBuilder.LocationType.Snap)
    
    addComponentBuilder4.SetCount(1)
    
    addComponentBuilder4.SetScatterOption(True)
    
    addComponentBuilder4.ReferenceSet = "Unknown"
    
    addComponentBuilder4.Layer = -1
    
    # ----------------------------------------------
    #   Dialog Begin Add Component
    # ----------------------------------------------
    addComponentBuilder4.ReferenceSet = "Use Model"
    
    addComponentBuilder4.Layer = -1
    
    partstouse10 = [NXOpen.BasePart.Null] * 1 
    partstouse10[0] = part2
    addComponentBuilder4.SetPartsToAdd(partstouse10)
    
    productinterfaceobjects10 = addComponentBuilder4.GetAllProductInterfaceObjects()
    
    coordinates6 = NXOpen.Point3d(-27.626066892224742, -23.348186865281392, 0.0)
    point13 = workPart.Points.CreatePoint(coordinates6)
    
    coordinates7 = NXOpen.Point3d(-27.626066892224742, -23.348186865281392, 0.0)
    point14 = workPart.Points.CreatePoint(coordinates7)
    
    origin7 = NXOpen.Point3d(-27.626066892224742, -23.348186865281392, 0.0)
    vector5 = NXOpen.Vector3d(0.0, 0.0, 1.0)
    direction5 = workPart.Directions.CreateDirection(origin7, vector5, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    origin8 = NXOpen.Point3d(-27.626066892224742, -23.348186865281392, 0.0)
    vector6 = NXOpen.Vector3d(1.0, 0.0, 0.0)
    direction6 = workPart.Directions.CreateDirection(origin8, vector6, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    origin9 = NXOpen.Point3d(-27.626066892224742, -23.348186865281392, 0.0)
    matrix3 = NXOpen.Matrix3x3()
    
    matrix3.Xx = 1.0
    matrix3.Xy = 0.0
    matrix3.Xz = 0.0
    matrix3.Yx = 0.0
    matrix3.Yy = 1.0
    matrix3.Yz = 0.0
    matrix3.Zx = 0.0
    matrix3.Zy = 0.0
    matrix3.Zz = 1.0
    plane3 = workPart.Planes.CreateFixedTypePlane(origin9, matrix3, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    xform3 = workPart.Xforms.CreateXformByPlaneXDirPoint(plane3, direction6, point14, NXOpen.SmartObject.UpdateOption.WithinModeling, 0.625, False, False)
    
    cartesianCoordinateSystem3 = workPart.CoordinateSystems.CreateCoordinateSystem(xform3, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    point15 = NXOpen.Point3d(-27.626066892224742, -23.348186865281392, 0.0)
    orientation4 = NXOpen.Matrix3x3()
    
    orientation4.Xx = 1.0
    orientation4.Xy = 0.0
    orientation4.Xz = 0.0
    orientation4.Yx = 0.0
    orientation4.Yy = 1.0
    orientation4.Yz = 0.0
    orientation4.Zx = 0.0
    orientation4.Zy = 0.0
    orientation4.Zz = 1.0
    addComponentBuilder4.SetInitialLocationAndOrientation(point15, orientation4)
    
    movableObjects4 = [NXOpen.NXObject.Null] * 1 
    component5 = workPart.ComponentAssembly.RootComponent.FindObject("COMPONENT wheels 1")
    movableObjects4[0] = component5
    componentNetwork5.SetMovingGroup(movableObjects4)
    
    markId23 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Add Component")
    
    markId24 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "AddComponent on_apply")
    
    componentNetwork5.Solve()
    
    componentPositioner5.ClearNetwork()
    
    nErrs10 = theSession.UpdateManager.AddToDeleteList(componentNetwork5)
    
    nErrs11 = theSession.UpdateManager.DoUpdate(markId22)
    
    componentPositioner5.EndAssemblyConstraints()
    
    logicalobjects4 = addComponentBuilder4.GetLogicalObjectsHavingUnassignedRequiredAttributes()
    
    addComponentBuilder4.ComponentName = "WHEELS"
    
    nXObject5 = addComponentBuilder4.Commit()
    
    errorList4 = addComponentBuilder4.GetOperationFailures()
    
    errorList4.Dispose()
    theSession.DeleteUndoMark(markId23, None)
    
    theSession.SetUndoMarkName(markId21, "Add Component")
    
    addComponentBuilder4.Destroy()
    
    workPart.Points.DeletePoint(point13)
    
    componentPositioner5.PrimaryArrangement = NXOpen.Assemblies.Arrangement.Null
    
    theSession.DeleteUndoMark(markId22, None)
    
    markId25 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")
    
    addComponentBuilder5 = workPart.AssemblyManager.CreateAddComponentBuilder()
    
    componentPositioner6 = workPart.ComponentAssembly.Positioner
    
    componentPositioner6.ClearNetwork()
    
    componentPositioner6.PrimaryArrangement = arrangement2
    
    componentPositioner6.BeginAssemblyConstraints()
    
    allowInterpartPositioning5 = theSession.Preferences.Assemblies.InterpartPositioning
    
    expression77 = workPart.Expressions.CreateSystemExpressionWithUnits("1.0", NXOpen.Unit.Null)
    
    expression78 = workPart.Expressions.CreateSystemExpressionWithUnits("1.0", unit1)
    
    expression79 = workPart.Expressions.CreateSystemExpressionWithUnits("0.0", unit1)
    
    expression80 = workPart.Expressions.CreateSystemExpressionWithUnits("0.0", unit2)
    
    expression81 = workPart.Expressions.CreateSystemExpressionWithUnits("1", NXOpen.Unit.Null)
    
    expression82 = workPart.Expressions.CreateSystemExpressionWithUnits("1.0", unit1)
    
    expression83 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)
    
    expression84 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit2)
    
    network6 = componentPositioner6.EstablishNetwork()
    
    componentNetwork6 = network6
    componentNetwork6.MoveObjectsState = True
    
    componentNetwork6.DisplayComponent = NXOpen.Assemblies.Component.Null
    
    theSession.SetUndoMarkName(markId25, "Add Component Dialog")
    
    componentNetwork6.MoveObjectsState = True
    
    markId26 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Assembly Constraints Update")
    
    addComponentBuilder5.SetComponentAnchor(NXOpen.Assemblies.ProductInterface.InterfaceObject.Null)
    
    addComponentBuilder5.SetInitialLocationType(NXOpen.Assemblies.AddComponentBuilder.LocationType.Snap)
    
    addComponentBuilder5.SetCount(1)
    
    addComponentBuilder5.SetScatterOption(True)
    
    addComponentBuilder5.ReferenceSet = "Unknown"
    
    addComponentBuilder5.Layer = -1
    
    # ----------------------------------------------
    #   Dialog Begin Add Component
    # ----------------------------------------------
    addComponentBuilder5.ReferenceSet = "Use Model"
    
    addComponentBuilder5.Layer = -1
    
    partstouse11 = [NXOpen.BasePart.Null] * 1 
    partstouse11[0] = part2
    addComponentBuilder5.SetPartsToAdd(partstouse11)
    
    productinterfaceobjects11 = addComponentBuilder5.GetAllProductInterfaceObjects()
    
    coordinates8 = NXOpen.Point3d(-38.674023369564388, -19.691138718789617, 0.0)
    point16 = workPart.Points.CreatePoint(coordinates8)
    
    coordinates9 = NXOpen.Point3d(-38.674023369564388, -19.691138718789617, 0.0)
    point17 = workPart.Points.CreatePoint(coordinates9)
    
    origin10 = NXOpen.Point3d(-38.674023369564388, -19.691138718789617, 0.0)
    vector7 = NXOpen.Vector3d(0.0, 0.0, 1.0)
    direction7 = workPart.Directions.CreateDirection(origin10, vector7, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    origin11 = NXOpen.Point3d(-38.674023369564388, -19.691138718789617, 0.0)
    vector8 = NXOpen.Vector3d(1.0, 0.0, 0.0)
    direction8 = workPart.Directions.CreateDirection(origin11, vector8, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    origin12 = NXOpen.Point3d(-38.674023369564388, -19.691138718789617, 0.0)
    matrix4 = NXOpen.Matrix3x3()
    
    matrix4.Xx = 1.0
    matrix4.Xy = 0.0
    matrix4.Xz = 0.0
    matrix4.Yx = 0.0
    matrix4.Yy = 1.0
    matrix4.Yz = 0.0
    matrix4.Zx = 0.0
    matrix4.Zy = 0.0
    matrix4.Zz = 1.0
    plane4 = workPart.Planes.CreateFixedTypePlane(origin12, matrix4, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    xform4 = workPart.Xforms.CreateXformByPlaneXDirPoint(plane4, direction8, point17, NXOpen.SmartObject.UpdateOption.WithinModeling, 0.625, False, False)
    
    cartesianCoordinateSystem4 = workPart.CoordinateSystems.CreateCoordinateSystem(xform4, NXOpen.SmartObject.UpdateOption.WithinModeling)
    
    point18 = NXOpen.Point3d(-38.674023369564388, -19.691138718789617, 0.0)
    orientation5 = NXOpen.Matrix3x3()
    
    orientation5.Xx = 1.0
    orientation5.Xy = 0.0
    orientation5.Xz = 0.0
    orientation5.Yx = 0.0
    orientation5.Yy = 1.0
    orientation5.Yz = 0.0
    orientation5.Zx = 0.0
    orientation5.Zy = 0.0
    orientation5.Zz = 1.0
    addComponentBuilder5.SetInitialLocationAndOrientation(point18, orientation5)
    
    movableObjects5 = [NXOpen.NXObject.Null] * 1 
    component6 = workPart.ComponentAssembly.RootComponent.FindObject("COMPONENT wheels 1")
    movableObjects5[0] = component6
    componentNetwork6.SetMovingGroup(movableObjects5)
    
    markId27 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Add Component")
    
    theSession.DeleteUndoMark(markId27, None)
    
    markId28 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Add Component")
    
    markId29 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "AddComponent on_apply")
    
    componentNetwork6.Solve()
    
    componentPositioner6.ClearNetwork()
    
    nErrs12 = theSession.UpdateManager.AddToDeleteList(componentNetwork6)
    
    nErrs13 = theSession.UpdateManager.DoUpdate(markId26)
    
    componentPositioner6.EndAssemblyConstraints()
    
    logicalobjects5 = addComponentBuilder5.GetLogicalObjectsHavingUnassignedRequiredAttributes()
    
    addComponentBuilder5.ComponentName = "WHEELS"
    
    nXObject6 = addComponentBuilder5.Commit()
    
    errorList5 = addComponentBuilder5.GetOperationFailures()
    
    errorList5.Dispose()
    theSession.DeleteUndoMark(markId28, None)
    
    theSession.SetUndoMarkName(markId25, "Add Component")
    
    addComponentBuilder5.Destroy()
    
    workPart.Points.DeletePoint(point16)
    
    componentPositioner6.PrimaryArrangement = NXOpen.Assemblies.Arrangement.Null
    
    theSession.DeleteUndoMark(markId26, None)
    
    # ----------------------------------------------
    #   Menu: Assemblies->Component Position->Assembly Constraints...
    # ----------------------------------------------
    markId30 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Constraints with Positioning Task")
    
    markId31 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")
    
    componentPositioner7 = workPart.ComponentAssembly.Positioner
    
    componentPositioner7.ClearNetwork()
    
    componentPositioner7.PrimaryArrangement = arrangement2
    
    componentPositioner7.BeginAssemblyConstraints()
    
    allowInterpartPositioning6 = theSession.Preferences.Assemblies.InterpartPositioning
    
    expression85 = workPart.Expressions.CreateSystemExpressionWithUnits("1.0", NXOpen.Unit.Null)
    
    expression86 = workPart.Expressions.CreateSystemExpressionWithUnits("1.0", unit1)
    
    expression87 = workPart.Expressions.CreateSystemExpressionWithUnits("0.0", unit1)
    
    expression88 = workPart.Expressions.CreateSystemExpressionWithUnits("0.0", unit2)
    
    expression89 = workPart.Expressions.CreateSystemExpressionWithUnits("1", NXOpen.Unit.Null)
    
    expression90 = workPart.Expressions.CreateSystemExpressionWithUnits("1.0", unit1)
    
    expression91 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)
    
    expression92 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit2)
    
    network7 = componentPositioner7.EstablishNetwork()
    
    componentNetwork7 = network7
    componentNetwork7.MoveObjectsState = True
    
    componentNetwork7.DisplayComponent = NXOpen.Assemblies.Component.Null
    
    componentNetwork7.NetworkArrangementsMode = NXOpen.Positioning.ComponentNetwork.ArrangementsMode.Existing
    
    theSession.SetUndoMarkName(markId31, "Assembly Constraints Dialog")
    
    componentNetwork7.MoveObjectsState = True
    
    componentNetwork7.NetworkArrangementsMode = NXOpen.Positioning.ComponentNetwork.ArrangementsMode.Existing
    
    markId32 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Assembly Constraints Update")
    
    component7 = nXObject6
    face1 = component7.FindObject("PROTO#.Features|EXTRUDE(2)|FACE 150 {(5.3427209828985,3.9366179853416,0.75) EXTRUDE(2)}")
    line1 = workPart.Lines.CreateFaceAxis(face1, NXOpen.SmartObject.UpdateOption.AfterModeling)
    
    objects1 = [NXOpen.TaggedObject.Null] * 1 
    objects1[0] = line1
    nErrs14 = theSession.UpdateManager.AddObjectsToDeleteList(objects1)
    
    face2 = component2.FindObject("PROTO#.Features|EXTRUDE(6)|FACE 160 {(3,-0,0.25) EXTRUDE(2)}")
    line2 = workPart.Lines.CreateFaceAxis(face2, NXOpen.SmartObject.UpdateOption.AfterModeling)
    
    markId33 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Create Constraint")
    
    constraint2 = componentPositioner7.CreateConstraint(True)
    
    componentConstraint2 = constraint2
    componentConstraint2.ConstraintType = NXOpen.Positioning.Constraint.Type.Concentric
    
    edge1 = component7.FindObject("PROTO#.Features|EXTRUDE(2)|EDGE * 130 * 150 {(4.2177209828985,4.5861370381799,1.5)(5.3427209828985,3.9366179853416,1.5)(4.2177209828985,3.2870989325032,1.5) EXTRUDE(2)}")
    constraintReference2 = componentConstraint2.CreateConstraintReference(component7, edge1, False, False, False)
    
    helpPoint1 = NXOpen.Point3d(-34.214573989399256, -15.016456589958558, 1.5)
    constraintReference2.HelpPoint = helpPoint1
    
    edge2 = component2.FindObject("PROTO#.Features|EXTRUDE(2)|EDGE * 130 EXTRUDE(6) 160 {(2.3504809471617,-13,1.375)(3,-13,0.25)(3.6495190528383,-13,1.375) EXTRUDE(2)}")
    constraintReference3 = componentConstraint2.CreateConstraintReference(component2, edge2, False, False, False)
    
    helpPoint2 = NXOpen.Point3d(3.0675154052582108, -13.000000000000002, 1.7469549317414135)
    constraintReference3.HelpPoint = helpPoint2
    
    constraintReference3.SetFixHint(True)
    
    objects2 = [NXOpen.TaggedObject.Null] * 1 
    objects2[0] = line2
    nErrs15 = theSession.UpdateManager.AddObjectsToDeleteList(objects2)
    
    componentNetwork7.Solve()
    
    markId34 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Assembly Constraints")
    
    theSession.DeleteUndoMark(markId34, None)
    
    markId35 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Assembly Constraints")
    
    nErrs16 = theSession.UpdateManager.DoUpdate(markId32)
    
    componentNetwork7.Solve()
    
    componentPositioner7.ClearNetwork()
    
    nErrs17 = theSession.UpdateManager.AddToDeleteList(componentNetwork7)
    
    componentPositioner7.DeleteNonPersistentConstraints()
    
    nErrs18 = theSession.UpdateManager.DoUpdate(markId32)
    
    theSession.DeleteUndoMark(markId35, None)
    
    theSession.SetUndoMarkName(markId31, "Assembly Constraints")
    
    componentPositioner7.PrimaryArrangement = NXOpen.Assemblies.Arrangement.Null
    
    componentPositioner7.EndAssemblyConstraints()
    
    theSession.DeleteUndoMark(markId32, None)
    
    theSession.DeleteUndoMark(markId33, None)
    
    theSession.DeleteUndoMark(markId30, None)
    
    # ----------------------------------------------
    #   Menu: Assemblies->Component Position->Assembly Constraints...
    # ----------------------------------------------
    markId36 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Constraints with Positioning Task")
    
    markId37 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")
    
    componentPositioner8 = workPart.ComponentAssembly.Positioner
    
    componentPositioner8.ClearNetwork()
    
    componentPositioner8.PrimaryArrangement = arrangement2
    
    componentPositioner8.BeginAssemblyConstraints()
    
    allowInterpartPositioning7 = theSession.Preferences.Assemblies.InterpartPositioning
    
    expression93 = workPart.Expressions.CreateSystemExpressionWithUnits("1.0", NXOpen.Unit.Null)
    
    expression94 = workPart.Expressions.CreateSystemExpressionWithUnits("1.0", unit1)
    
    expression95 = workPart.Expressions.CreateSystemExpressionWithUnits("0.0", unit1)
    
    expression96 = workPart.Expressions.CreateSystemExpressionWithUnits("0.0", unit2)
    
    expression97 = workPart.Expressions.CreateSystemExpressionWithUnits("1", NXOpen.Unit.Null)
    
    expression98 = workPart.Expressions.CreateSystemExpressionWithUnits("1.0", unit1)
    
    expression99 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)
    
    expression100 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit2)
    
    network8 = componentPositioner8.EstablishNetwork()
    
    componentNetwork8 = network8
    componentNetwork8.MoveObjectsState = True
    
    componentNetwork8.DisplayComponent = NXOpen.Assemblies.Component.Null
    
    componentNetwork8.NetworkArrangementsMode = NXOpen.Positioning.ComponentNetwork.ArrangementsMode.Existing
    
    theSession.SetUndoMarkName(markId37, "Assembly Constraints Dialog")
    
    componentNetwork8.MoveObjectsState = True
    
    componentNetwork8.NetworkArrangementsMode = NXOpen.Positioning.ComponentNetwork.ArrangementsMode.Existing
    
    markId38 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Assembly Constraints Update")
    
    component8 = nXObject5
    face3 = component8.FindObject("PROTO#.Features|EXTRUDE(2)|FACE 150 {(5.3427209828985,3.9366179853416,0.75) EXTRUDE(2)}")
    line3 = workPart.Lines.CreateFaceAxis(face3, NXOpen.SmartObject.UpdateOption.AfterModeling)
    
    objects3 = [NXOpen.TaggedObject.Null] * 1 
    objects3[0] = line3
    nErrs19 = theSession.UpdateManager.AddObjectsToDeleteList(objects3)
    
    face4 = component2.FindObject("PROTO#.Features|EXTRUDE(6)|FACE 170 {(9,-0,0.25) EXTRUDE(2)}")
    line4 = workPart.Lines.CreateFaceAxis(face4, NXOpen.SmartObject.UpdateOption.AfterModeling)
    
    markId39 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Create Constraint")
    
    constraint3 = componentPositioner8.CreateConstraint(True)
    
    componentConstraint3 = constraint3
    componentConstraint3.ConstraintType = NXOpen.Positioning.Constraint.Type.Concentric
    
    edge3 = component8.FindObject("PROTO#.Features|EXTRUDE(2)|EDGE * 130 * 150 {(4.2177209828985,4.5861370381799,1.5)(5.3427209828985,3.9366179853416,1.5)(4.2177209828985,3.2870989325032,1.5) EXTRUDE(2)}")
    constraintReference4 = componentConstraint3.CreateConstraintReference(component8, edge3, False, False, False)
    
    helpPoint3 = NXOpen.Point3d(-23.25208436070578, -18.694175340877699, 1.5)
    constraintReference4.HelpPoint = helpPoint3
    
    edge4 = component2.FindObject("PROTO#.Features|EXTRUDE(2)|EDGE * 130 EXTRUDE(6) 170 {(8.3504809471617,-13,1.375)(9,-13,0.25)(9.6495190528383,-13,1.375) EXTRUDE(2)}")
    constraintReference5 = componentConstraint3.CreateConstraintReference(component2, edge4, False, False, False)
    
    helpPoint4 = NXOpen.Point3d(9.6570759675096429, -13.000000000000002, 1.3615953165090282)
    constraintReference5.HelpPoint = helpPoint4
    
    constraintReference5.SetFixHint(True)
    
    objects4 = [NXOpen.TaggedObject.Null] * 1 
    objects4[0] = line4
    nErrs20 = theSession.UpdateManager.AddObjectsToDeleteList(objects4)
    
    componentNetwork8.Solve()
    
    markId40 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Assembly Constraints")
    
    theSession.DeleteUndoMark(markId40, None)
    
    markId41 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Assembly Constraints")
    
    nErrs21 = theSession.UpdateManager.DoUpdate(markId38)
    
    componentNetwork8.Solve()
    
    componentPositioner8.ClearNetwork()
    
    nErrs22 = theSession.UpdateManager.AddToDeleteList(componentNetwork8)
    
    componentPositioner8.DeleteNonPersistentConstraints()
    
    nErrs23 = theSession.UpdateManager.DoUpdate(markId38)
    
    theSession.DeleteUndoMark(markId41, None)
    
    theSession.SetUndoMarkName(markId37, "Assembly Constraints")
    
    componentPositioner8.PrimaryArrangement = NXOpen.Assemblies.Arrangement.Null
    
    componentPositioner8.EndAssemblyConstraints()
    
    theSession.DeleteUndoMark(markId38, None)
    
    theSession.DeleteUndoMark(markId39, None)
    
    theSession.DeleteUndoMark(markId36, None)
    
    # ----------------------------------------------
    #   Menu: Assemblies->Component Position->Assembly Constraints...
    # ----------------------------------------------
    markId42 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Constraints with Positioning Task")
    
    markId43 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")
    
    componentPositioner9 = workPart.ComponentAssembly.Positioner
    
    componentPositioner9.ClearNetwork()
    
    componentPositioner9.PrimaryArrangement = arrangement2
    
    componentPositioner9.BeginAssemblyConstraints()
    
    allowInterpartPositioning8 = theSession.Preferences.Assemblies.InterpartPositioning
    
    expression101 = workPart.Expressions.CreateSystemExpressionWithUnits("1.0", NXOpen.Unit.Null)
    
    expression102 = workPart.Expressions.CreateSystemExpressionWithUnits("1.0", unit1)
    
    expression103 = workPart.Expressions.CreateSystemExpressionWithUnits("0.0", unit1)
    
    expression104 = workPart.Expressions.CreateSystemExpressionWithUnits("0.0", unit2)
    
    expression105 = workPart.Expressions.CreateSystemExpressionWithUnits("1", NXOpen.Unit.Null)
    
    expression106 = workPart.Expressions.CreateSystemExpressionWithUnits("1.0", unit1)
    
    expression107 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)
    
    expression108 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit2)
    
    network9 = componentPositioner9.EstablishNetwork()
    
    componentNetwork9 = network9
    componentNetwork9.MoveObjectsState = True
    
    componentNetwork9.DisplayComponent = NXOpen.Assemblies.Component.Null
    
    componentNetwork9.NetworkArrangementsMode = NXOpen.Positioning.ComponentNetwork.ArrangementsMode.Existing
    
    theSession.SetUndoMarkName(markId43, "Assembly Constraints Dialog")
    
    componentNetwork9.MoveObjectsState = True
    
    componentNetwork9.NetworkArrangementsMode = NXOpen.Positioning.ComponentNetwork.ArrangementsMode.Existing
    
    markId44 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Assembly Constraints Update")
    
    component9 = nXObject4
    face5 = component9.FindObject("PROTO#.Features|EXTRUDE(2)|FACE 150 {(5.3427209828985,3.9366179853416,0.75) EXTRUDE(2)}")
    line5 = workPart.Lines.CreateFaceAxis(face5, NXOpen.SmartObject.UpdateOption.AfterModeling)
    
    objects5 = [NXOpen.TaggedObject.Null] * 1 
    objects5[0] = line5
    nErrs24 = theSession.UpdateManager.AddObjectsToDeleteList(objects5)
    
    rotMatrix1 = NXOpen.Matrix3x3()
    
    rotMatrix1.Xx = -0.155461522628911
    rotMatrix1.Xy = 0.93009925394574333
    rotMatrix1.Xz = -0.33278685790077767
    rotMatrix1.Yx = -0.46860350460380001
    rotMatrix1.Yy = 0.22713058069105477
    rotMatrix1.Yz = 0.8537109901998341
    rotMatrix1.Zx = 0.86962202735150229
    rotMatrix1.Zy = 0.28866429831989265
    rotMatrix1.Zz = 0.40053770411853473
    translation1 = NXOpen.Point3d(0.66827159115228107, -2.1770332474372358, 1.3931580629570792)
    workPart.ModelingViews.WorkView.SetRotationTranslationScale(rotMatrix1, translation1, 4.9242566098862781)
    
    line6 = workPart.Lines.CreateFaceAxis(face2, NXOpen.SmartObject.UpdateOption.AfterModeling)
    
    markId45 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Create Constraint")
    
    constraint4 = componentPositioner9.CreateConstraint(True)
    
    componentConstraint4 = constraint4
    componentConstraint4.ConstraintType = NXOpen.Positioning.Constraint.Type.Concentric
    
    edge5 = component9.FindObject("PROTO#.Features|EXTRUDE(2)|EDGE * 130 * 150 {(4.2177209828985,4.5861370381799,1.5)(5.3427209828985,3.9366179853416,1.5)(4.2177209828985,3.2870989325032,1.5) EXTRUDE(2)}")
    constraintReference6 = componentConstraint4.CreateConstraintReference(component9, edge5, False, False, False)
    
    helpPoint5 = NXOpen.Point3d(-31.038377844381777, -5.0825944303683128, 1.4999999999999991)
    constraintReference6.HelpPoint = helpPoint5
    
    edge6 = component2.FindObject("PROTO#.Features|EXTRUDE(6)|EDGE * 160 EXTRUDE(2) 120 {(2.3504809471617,13,1.375)(3,13,0.25)(3.6495190528383,13,1.375) EXTRUDE(2)}")
    constraintReference7 = componentConstraint4.CreateConstraintReference(component2, edge6, False, False, False)
    
    helpPoint6 = NXOpen.Point3d(3.2692292495490145, 13.000000000000002, 1.7000111507592393)
    constraintReference7.HelpPoint = helpPoint6
    
    constraintReference7.SetFixHint(True)
    
    objects6 = [NXOpen.TaggedObject.Null] * 1 
    objects6[0] = line6
    nErrs25 = theSession.UpdateManager.AddObjectsToDeleteList(objects6)
    
    componentNetwork9.Solve()
    
    markId46 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Reverse Last Constraint")
    
    componentConstraint4.FlipAlignment()
    
    componentNetwork9.Solve()
    
    markId47 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Assembly Constraints")
    
    theSession.DeleteUndoMark(markId47, None)
    
    markId48 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Assembly Constraints")
    
    nErrs26 = theSession.UpdateManager.DoUpdate(markId44)
    
    componentNetwork9.Solve()
    
    componentPositioner9.ClearNetwork()
    
    nErrs27 = theSession.UpdateManager.AddToDeleteList(componentNetwork9)
    
    componentPositioner9.DeleteNonPersistentConstraints()
    
    nErrs28 = theSession.UpdateManager.DoUpdate(markId44)
    
    theSession.DeleteUndoMark(markId48, None)
    
    theSession.SetUndoMarkName(markId43, "Assembly Constraints")
    
    componentPositioner9.PrimaryArrangement = NXOpen.Assemblies.Arrangement.Null
    
    componentPositioner9.EndAssemblyConstraints()
    
    theSession.DeleteUndoMark(markId44, None)
    
    theSession.DeleteUndoMark(markId46, None)
    
    theSession.DeleteUndoMark(markId45, None)
    
    theSession.DeleteUndoMark(markId42, None)
    
    # ----------------------------------------------
    #   Menu: Assemblies->Component Position->Assembly Constraints...
    # ----------------------------------------------
    markId49 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Constraints with Positioning Task")
    
    markId50 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")
    
    componentPositioner10 = workPart.ComponentAssembly.Positioner
    
    componentPositioner10.ClearNetwork()
    
    componentPositioner10.PrimaryArrangement = arrangement2
    
    componentPositioner10.BeginAssemblyConstraints()
    
    allowInterpartPositioning9 = theSession.Preferences.Assemblies.InterpartPositioning
    
    expression109 = workPart.Expressions.CreateSystemExpressionWithUnits("1.0", NXOpen.Unit.Null)
    
    expression110 = workPart.Expressions.CreateSystemExpressionWithUnits("1.0", unit1)
    
    expression111 = workPart.Expressions.CreateSystemExpressionWithUnits("0.0", unit1)
    
    expression112 = workPart.Expressions.CreateSystemExpressionWithUnits("0.0", unit2)
    
    expression113 = workPart.Expressions.CreateSystemExpressionWithUnits("1", NXOpen.Unit.Null)
    
    expression114 = workPart.Expressions.CreateSystemExpressionWithUnits("1.0", unit1)
    
    expression115 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)
    
    expression116 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit2)
    
    network10 = componentPositioner10.EstablishNetwork()
    
    componentNetwork10 = network10
    componentNetwork10.MoveObjectsState = True
    
    componentNetwork10.DisplayComponent = NXOpen.Assemblies.Component.Null
    
    componentNetwork10.NetworkArrangementsMode = NXOpen.Positioning.ComponentNetwork.ArrangementsMode.Existing
    
    theSession.SetUndoMarkName(markId50, "Assembly Constraints Dialog")
    
    componentNetwork10.MoveObjectsState = True
    
    componentNetwork10.NetworkArrangementsMode = NXOpen.Positioning.ComponentNetwork.ArrangementsMode.Existing
    
    markId51 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Assembly Constraints Update")
    
    line7 = workPart.Lines.CreateFaceAxis(face4, NXOpen.SmartObject.UpdateOption.AfterModeling)
    
    component10 = nXObject3
    face6 = component10.FindObject("PROTO#.Features|EXTRUDE(2)|FACE 150 {(5.3427209828985,3.9366179853416,0.75) EXTRUDE(2)}")
    line8 = workPart.Lines.CreateFaceAxis(face6, NXOpen.SmartObject.UpdateOption.AfterModeling)
    
    objects7 = [NXOpen.TaggedObject.Null] * 1 
    objects7[0] = line7
    nErrs29 = theSession.UpdateManager.AddObjectsToDeleteList(objects7)
    
    objects8 = [NXOpen.TaggedObject.Null] * 1 
    objects8[0] = line8
    nErrs30 = theSession.UpdateManager.AddObjectsToDeleteList(objects8)
    
    line9 = workPart.Lines.CreateFaceAxis(face4, NXOpen.SmartObject.UpdateOption.AfterModeling)
    
    markId52 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Create Constraint")
    
    constraint5 = componentPositioner10.CreateConstraint(True)
    
    componentConstraint5 = constraint5
    componentConstraint5.ConstraintType = NXOpen.Positioning.Constraint.Type.Concentric
    
    edge7 = component10.FindObject("PROTO#.Features|EXTRUDE(2)|EDGE * 130 * 150 {(4.2177209828985,4.5861370381799,1.5)(5.3427209828985,3.9366179853416,1.5)(4.2177209828985,3.2870989325032,1.5) EXTRUDE(2)}")
    constraintReference8 = componentConstraint5.CreateConstraintReference(component10, edge7, False, False, False)
    
    helpPoint7 = NXOpen.Point3d(-19.476881573993051, -10.731079176906578, 1.4999999999999996)
    constraintReference8.HelpPoint = helpPoint7
    
    edge8 = component2.FindObject("PROTO#.Features|EXTRUDE(6)|EDGE * 170 EXTRUDE(2) 120 {(8.3504809471617,13,1.375)(9,13,0.25)(9.6495190528383,13,1.375) EXTRUDE(2)}")
    constraintReference9 = componentConstraint5.CreateConstraintReference(component2, edge8, False, False, False)
    
    helpPoint8 = NXOpen.Point3d(9.548815989044023, 13.000000000000002, 1.5111761048500105)
    constraintReference9.HelpPoint = helpPoint8
    
    constraintReference9.SetFixHint(True)
    
    objects9 = [NXOpen.TaggedObject.Null] * 1 
    objects9[0] = line9
    nErrs31 = theSession.UpdateManager.AddObjectsToDeleteList(objects9)
    
    componentNetwork10.Solve()
    
    markId53 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Reverse Last Constraint")
    
    componentConstraint5.FlipAlignment()
    
    componentNetwork10.Solve()
    
    markId54 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Assembly Constraints")
    
    theSession.DeleteUndoMark(markId54, None)
    
    markId55 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Assembly Constraints")
    
    nErrs32 = theSession.UpdateManager.DoUpdate(markId51)
    
    componentNetwork10.Solve()
    
    componentPositioner10.ClearNetwork()
    
    nErrs33 = theSession.UpdateManager.AddToDeleteList(componentNetwork10)
    
    componentPositioner10.DeleteNonPersistentConstraints()
    
    nErrs34 = theSession.UpdateManager.DoUpdate(markId51)
    
    theSession.DeleteUndoMark(markId55, None)
    
    theSession.SetUndoMarkName(markId50, "Assembly Constraints")
    
    componentPositioner10.PrimaryArrangement = NXOpen.Assemblies.Arrangement.Null
    
    componentPositioner10.EndAssemblyConstraints()
    
    theSession.DeleteUndoMark(markId51, None)
    
    theSession.DeleteUndoMark(markId53, None)
    
    theSession.DeleteUndoMark(markId52, None)
    
    theSession.DeleteUndoMark(markId49, None)
    
    rotMatrix2 = NXOpen.Matrix3x3()
    
    rotMatrix2.Xx = 0.82876837514433943
    rotMatrix2.Xy = 0.48171530463639256
    rotMatrix2.Xz = 0.28476893376855361
    rotMatrix2.Yx = -0.47447819499988847
    rotMatrix2.Yy = 0.33512986464470557
    rotMatrix2.Yz = 0.81397691385743243
    rotMatrix2.Zx = 0.29667056279695064
    rotMatrix2.Zy = -0.80971497398917391
    rotMatrix2.Zz = 0.50630844163163191
    translation2 = NXOpen.Point3d(-5.0370863358457498, -2.0972031430062437, 4.1236015213241988)
    workPart.ModelingViews.WorkView.SetRotationTranslationScale(rotMatrix2, translation2, 4.9242566098862781)
    
    # ----------------------------------------------
    #   Menu: Tools->Journal->Stop Recording
    # ----------------------------------------------
    
if __name__ == '__main__':
    main()